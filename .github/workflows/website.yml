name: Website

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths:
      - ".github/**"
      - "docker/**"
      - "src/**"

jobs:
  core-compare:
    uses: ./.github/workflows/core-compare.yml
  linters:
    uses: ./.github/workflows/linting.yml
  build:
    name: Build new website version
    runs-on: ubuntu-latest
    needs: 
      - core-compare
      - linters
    steps:
      - name: Checkout to root of repo
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          REGISTRY: ${{ secrets.YC_CR_REGISTRY }}
          IMAGE_NAME: ${{ secrets.YC_CR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          ASGI_TARGET: ${{ secrets.ASGI_TARGET }}
          ASGI_PORT: ${{ secrets.ASGI_PORT }}
        run: |
          echo "${{ secrets.YC_WEB_VM_ENV }}" > docker/.env
          make publish

  deploy:
    name: Deploy new website version
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Pull image and restart the web server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.YC_WEB_VM_SSH_HOST }}
          username: ${{ secrets.YC_WEB_VM_SSH_USERNAME }}
          key: ${{ secrets.YC_WEB_VM_SSH_PRIVATE_KEY }}
          port: ${{ secrets.YC_WEB_VM_SSH_PORT }}
          script: |
            cd /var/www/matveyivanov && rm -rf build.tmp || true
            cd /var/www/matveyivanov && mv build build.tmp
            cd /var/www/matveyivanov && rm -rf build
            cd /var/www/matveyivanov && git clone https://${{ secrets.YC_WEB_VM_GITHUB_TOKEN }}@github.com/MatveyIvanov/matveyivanov.git --branch ${{ github.ref_name }} --single-branch build
            cd /var/www/matveyivanov && cd build
            export REGISTRY=${{ secrets.YC_CR_REGISTRY }}
            export IMAGE_NAME=${{ secrets.YC_CR_REPOSITORY }}
            export IMAGE_TAG=${{ github.ref_name }}
            export PROJECT_NAME=${{ secrets.PROJECT_NAME }}
            export ASGI_TARGET=${{ secrets.ASGI_TARGET }}
            export ASGI_PORT=${{ secrets.ASGI_PORT }}
            echo ${{ secrets.YC_WEB_VM_DOCKER_TOKEN }}|docker login --username oauth --password-stdin ${{ secrets.YC_WEB_VM_DOCKER_HUB }}
            cd /var/www/matveyivanov/build && echo "${{ secrets.YC_WEB_VM_ENV }}" > docker/.env
            cd /var/www/matveyivanov/build && echo "" >> docker/.env
            cd /var/www/matveyivanov/build && echo "IMAGE_TAG=${{ github.ref_name }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PROXY_TRUSTED_HOSTS=${{ secrets.YC_WEB_VM_PROXY_TRUSTED_HOSTS }}" >> docker/.env
            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov pull
            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov down
            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov up -d --no-build
