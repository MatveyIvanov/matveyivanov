name: Website

on:
  workflow_dispatch:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths:
      - ".github/**"
      - "docker/**"
      - "src/**"

jobs:
  core-compare:
    uses: ./.github/workflows/core-compare.yml
  linters:
    uses: ./.github/workflows/linting.yml
  luacheck:
    uses: ./.github/workflows/linting.yml
  build:
    name: Build new website version
    runs-on: ubuntu-latest
    needs: 
      - core-compare
      - linters
    steps:
      - name: Checkout to root of repo
        uses: actions/checkout@v4

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          REGISTRY: ${{ secrets.YC_CR_REGISTRY }}
          IMAGE_NAME: ${{ secrets.YC_CR_REPOSITORY }}
          IMAGE_TAG: ${{ github.ref_name }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          ASGI_TARGET: ${{ secrets.ASGI_TARGET }}
          ASGI_PORT: ${{ secrets.ASGI_PORT }}
        run: |
          echo "${{ secrets.YC_WEB_VM_ENV }}" > docker/.env
          make publish

  deploy:
    name: Deploy new website version
    runs-on: ubuntu-latest
    needs: 
      - build
    strategy:
      fail-fast: true
      matrix:
        vm:
          - id: "Primary Web VM"
            host_secret_name: YC_WEB_VM_SSH_HOST
            username_secret_name: YC_WEB_VM_SSH_USERNAME
            key_secret_name: YC_WEB_VM_SSH_PRIVATE_KEY
            port_secret_name: YC_WEB_VM_SSH_PORT
          - id: "Fallback Web VM"
            host_secret_name: YC_WEB_FALLBACK_VM_SSH_HOST
            username_secret_name: YC_WEB_FALLBACK_VM_SSH_USERNAME
            key_secret_name: YC_WEB_FALLBACK_VM_SSH_PRIVATE_KEY
            port_secret_name: YC_WEB_FALLBACK_VM_SSH_PORT
    steps:
      - name: Pull image and restart the web server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets[matrix.vm.host_secret_name] }}
          username: ${{ secrets[matrix.vm.username_secret_name] }}
          key: ${{ secrets[matrix.vm.key_secret_name] }}
          port: ${{ secrets[matrix.vm.port_secret_name] }}
          script: |
            cd /var/www/matveyivanov && rm -rf build.tmp || true
            cd /var/www/matveyivanov && mv build build.tmp
            cd /var/www/matveyivanov && rm -rf build

            cd /var/www/matveyivanov && git clone https://${{ secrets.YC_WEB_VM_GITHUB_TOKEN }}@github.com/MatveyIvanov/matveyivanov.git --branch ${{ github.ref_name }} --single-branch build

            export REGISTRY=${{ secrets.YC_CR_REGISTRY }}
            export IMAGE_NAME=${{ secrets.YC_CR_REPOSITORY }}
            export IMAGE_TAG=${{ github.ref_name }}
            export PROJECT_NAME=${{ secrets.PROJECT_NAME }}
            export ASGI_TARGET=${{ secrets.ASGI_TARGET }}
            export ASGI_PORT=${{ secrets.YC_WEB_VM_ASGI_PORT }}
            export RESTART_POLICY=${{ secrets.RESTART_POLICY }}

            echo ${{ secrets.YC_WEB_VM_DOCKER_TOKEN }}|docker login --username oauth --password-stdin ${{ secrets.YC_WEB_VM_DOCKER_HUB }}

            cd /var/www/matveyivanov/build && echo "# Environment variables" > docker/.env
            cd /var/www/matveyivanov/build && echo "IMAGE_TAG=${{ github.ref_name }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REGISTRY=${{ secrets.YC_CR_REGISTRY }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PROJECT_NAME=${{ secrets.PROJECT_NAME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "DEBUG=${{ secrets.DEBUG }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PROD=${{ secrets.PROD }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "STATIC_URL=${{ secrets.YC_WEB_VM_STATIC_URL }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "STATIC_PATH=${{ secrets.YC_WEB_VM_STATIC_PATH }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "ASGI_PORT=${{ secrets.YC_WEB_VM_ASGI_PORT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PORT=${{ secrets.YC_WEB_VM_ASGI_PORT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "ABSOLUTE_URL=${{ secrets.YC_WEB_VM_ABSOLUTE_URL }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "ALLOWED_HOSTS=${{ secrets.YC_WEB_VM_ALLOWED_HOSTS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PROXY_TRUSTED_HOSTS=${{ secrets.YC_WEB_VM_PROXY_TRUSTED_HOSTS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_SOCKET_TIMEOUT=${{ secrets.YC_WEB_VM_REDIS_SOCKET_TIMEOUT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_SOCKET_CONNECTION_TIMEOUT=${{ secrets.YC_WEB_VM_REDIS_SOCKET_CONNECTION_TIMEOUT }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "REDIS_VISITORS_COUNTER_KEY=${{ secrets.REDIS_VISITORS_COUNTER_KEY }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "SQS_LOCATIONS_ACCESS_KEY=${{ secrets.SQS_LOCATIONS_ACCESS_KEY }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "SQS_LOCATIONS_SECRET_KEY=${{ secrets.SQS_LOCATIONS_SECRET_KEY }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "SQS_LOCATIONS_ENDPOINT_URL=${{ secrets.SQS_LOCATIONS_ENDPOINT_URL }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "SQS_LOCATIONS_QUEUE_URL=${{ secrets.SQS_LOCATIONS_QUEUE_URL }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "SQS_LOCATIONS_REGION_NAME=${{ secrets.SQS_LOCATIONS_REGION_NAME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "GITHUB_CREATE_WEBHOOK_TOKEN=${{ secrets.YC_WEB_VM_GITHUB_CREATE_WEBHOOK_TOKEN }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "GITHUB_TAG_PATTERN=${{ secrets.YC_WEB_VM_GITHUB_TAG_PATTERN }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "TIMEZONE=${{ secrets.YC_WEB_VM_TIMEZONE }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "VISITORS_SSE_INTERVAL_SECONDS=${{ secrets.YC_WEB_VM_VISITORS_SSE_INTERVAL_SECONDS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "CHANGELOG_SSE_INTERVAL_SECONDS=${{ secrets.YC_WEB_VM_CHANGELOG_SSE_INTERVAL_SECONDS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "CHANGELOG_VERSION_DEFAULT_DESCRIPTION=${{ secrets.YC_WEB_VM_CHANGELOG_VERSION_DEFAULT_DESCRIPTION }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "CHANGELOG_BUFFER_NAME=${{ secrets.CHANGELOG_BUFFER_NAME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "CHANGELOG_BUFFER_MAX_SIZE=${{ secrets.CHANGELOG_BUFFER_MAX_SIZE }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "LOCATIONS_SSE_INTERVAL_SECONDS=${{ secrets.YC_WEB_VM_LOCATIONS_SSE_INTERVAL_SECONDS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "LOCATIONS_BUFFER_NAME=${{ secrets.LOCATIONS_BUFFER_NAME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "LOCATIONS_BUFFER_MAX_SIZE=${{ secrets.LOCATIONS_BUFFER_MAX_SIZE }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_HOME=${{ secrets.YC_WEB_VM_HTML_FOR_HOME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_EXPERIENCE=${{ secrets.YC_WEB_VM_HTML_FOR_EXPERIENCE }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_STACK=${{ secrets.YC_WEB_VM_HTML_FOR_STACK }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_PYTHON=${{ secrets.YC_WEB_VM_HTML_FOR_PYTHON }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_BOOKS=${{ secrets.YC_WEB_VM_HTML_FOR_BOOKS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_PROJECTS=${{ secrets.YC_WEB_VM_HTML_FOR_PROJECTS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HTML_FOR_ERROR=${{ secrets.YC_WEB_VM_HTML_FOR_ERROR }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "HOME=${{ secrets.YC_WEB_VM_HOME }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "EXPERIENCE=${{ secrets.YC_WEB_VM_EXPERIENCE }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "STACK=${{ secrets.YC_WEB_VM_STACK }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PYTHON=${{ secrets.YC_WEB_VM_PYTHON }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "WORK_BOOKS=${{ secrets.YC_WEB_VM_WORK_BOOKS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "OFF_WORK_BOOKS=${{ secrets.YC_WEB_VM_OFF_WORK_BOOKS }}" >> docker/.env
            cd /var/www/matveyivanov/build && echo "PROJECTS=${{ secrets.YC_WEB_VM_PROJECTS }}" >> docker/.env

            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov pull
            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov down
            cd /var/www/matveyivanov/build && docker compose -f docker/docker-compose.yc.yml -p matveyivanov up -d --no-build
